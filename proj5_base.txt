# 创建用户进程


# 进程退出和等待进程

  分两步来完成这个工作


  1===> 首先由用户进程本身完成大部分资源占用内存回收工作。
  2===> 然后由此进程的父进程完成剩余资源占用内存的回收工作。(进程要执行回收操作，就表明此进程还存在，还在执行指令，这就需要内核栈的空间不能释放，且表示进程存在的进程控制块不能释放。))



# 系统调用实现

    与用户态的函数库调用执行过程相比， 系统调用执行过程有四点主要不同：
    
    1==> 不是通过 "CALL" 指令,而是通过 "INT"指令发起系统调用.
    2==> 不是通过 “RET” 指令,而是通过 “IRET” 指令完成系统调用返回.
    3==> 当到达内核态后，操作系统需要严格检查系统调用传递的参数，确保不会破坏整个系统的安全性。
    4==> 执行系统调用可导致进程等待某事件发生,从而可引起进程切换.
