
# proj 7 同步互斥

# pro6 完成了用户进程的调度框架和具体的调度算法,可调度运行多个进程。如果多个进程需要协同操作或访问共享
       资源,则存在如何同步和有序竞争的问题 ？

# 目的:1=>熟悉 OS 的进程同步机制--信号量 (semaphone) 机制, 以及基于信号量的 哲学家就餐问题解决方案.     2=>掌握管程的概念和原理,并参考信号量机制，实现基于管程的条件变量机制。



# 1 ===> 理解内核级别 信号量的实现和基于内核级 信号量的哲学家就餐问题 ？

    md :=> 内核级信号量的设计描述 ？其大致执行流程 ?
    md :=> 用户态进程(线程) 提供信号量机制的设计方案, 并比较说明给内核级别提供信号量机制的异同?

# 2 ===> 完成内核级条件变量和基于内核级条件变量的哲学家就餐问题 (code)?

    md :=> 内核级条件变量的设计描述 ？其大致执行流程 ? 
    md :=> 用户态进程(线程) 提供条件变量机制的设计方案, 并比较说明给内核级别提供信号量机制的异同?
    md :=> 能否不用基于信号量机制来完成条件变量机制 ？ 如果不能,清描述理由? 如果能,给出设计思路与实现.


# 3 Challenge  :==> 在 kernel 中实现简化的死锁和重入探测机制 ？

    md :=> 实现一种探测机制,能够在多进程(线程)运行同步互斥问题时,动态判断当前系统是否出现了死锁产生
           的必要条件,是否产生了多个进程进入临界区的情况 ？如果发现,则让 os 进入 monitor .

# 4 Challenge  :==>  参考 Linux 的 RCU 机制, 并在 kernel 中实现简化的 RCU 机制 ？         

    md :=> http://www.ibm.com/developerworks/cn/linux/l-rcu/